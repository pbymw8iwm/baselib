IF(WIN32)
	INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../../utils/trunk/src)
	ADD_DEFINITIONS(-D_REENTRANT)

	LINK_LIBRARIES(utils Ws2_32.lib)
	LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/../../utils/trunk/lib)
ELSE(WIN32)
	INCLUDE_DIRECTORIES(/usr/local/utils-0.0.1/include)
	ADD_DEFINITIONS(-g -o3 -W -Wall -Wno-invalid-offsetof -fPIC 
	-D_REENTRANT)

	LINK_LIBRARIES(utils rt)
	LINK_DIRECTORIES(/usr/local/utils-0.0.1/lib)
ENDIF(WIN32)


FILE(GLOB_RECURSE DIR_HEADERS "*.h")
AUX_SOURCE_DIRECTORY(. DIR_SRCS)

IF(WIN32)
	ADD_LIBRARY(net_manager STATIC ${DIR_SRCS} ${DIR_HEADERS})
ELSE(WIN32)
	ADD_LIBRARY(net_manager SHARED ${DIR_SRCS})
ENDIF(WIN32)
SET_TARGET_PROPERTIES(net_manager PROPERTIES VERSION 0.0.2)

IF(WIN32)

ELSE(WIN32)
	INSTALL(TARGETS net_manager LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
	INSTALL(DIRECTORY ./ DESTINATION 
		${CMAKE_INSTALL_PREFIX}/include PATTERN "*.cpp" EXCLUDE PATTERN ".svn" EXCLUDE PATTERN "gen" EXCLUDE PATTERN "*.txt" EXCLUDE)
ENDIF(WIN32)		